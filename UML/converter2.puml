@startuml name
start
    :read input file(.hql);
    :定型に整形;
    if (CREATE TABLE句がある) then (True)

        :trino_ddl += CREATE TABLE tablename(;
        if ("CREATE TABLE"の後に空白文字のみ挟んで"("がある) then (True)
            :columsに()の中身を格納;

            while (column in columns)

                if (typeが指定範囲内) then (True)
                    :trino_ddl += 
                    column type; 
                else (False)
                    :Error出力;
                    end
                endif  

            endwhile

        else (False)
            if ("'LIKE tablename'のフォーマットになっている")
                :trino_ddl += 
                LIKE tablename;
            else (False)
                :Error出力;
                end
            endif
        endif

        if (PARTITIONED) then (True)
            if (WITHが既にある) then (True)
                :trino_ddl += 
                ",\n  partitioned_by = ARRAY['dt']";
            else (False)
                :trino_ddl += 
                ")\nWITH(\n  partitioned_by = ARRAY['dt']";
            endif
        endif

        if (DATA FORMAT) then (True)
            if (WITHが既にある) then (True)
                :trino_ddl += 
                ",\n  format = 'xxx'";
            else (False)
                :trino_ddl += 
                ")\nWITH(\n  format = 'xxx'";
            endif

        endif

        if (CLUSTERED BY) then (True)
            if (WITHが既にある) then (True)
                :trino_ddl += 
                ",\n  bucketed_by = ARRAY['xxx']";
            else (False)
                :trino_ddl += 
                ")\nWITH(\n  bucketed_by = ARRAY['xxx']";
            endif

        endif

        if (INTO BUCKETS) then (True)
            :trino_ddl += 
            ",\n  bucket_count = xx";
        endif

        if (TBLPROPERTIES) then (True)
            if (WITHが既にある) then (True)
                :trino_ddl += 
                ",\n  {property}";
            else (False)
                :trino_ddl += 
                ")\nWITH(\n  {property}";
            endif

        endif

        



    elseif (SHOW TABLES) then (True)
        :trino_ddl +=
        "SHOW TABLES FROM catalog.db LIKE '{tablename}'";

    elseif (SHOW PARTITIONS) then (True)
        :trino_ddl +=
        "SELECT * FROM catalog.{tablename}$partitions";

    elseif (DESCRIBE) then (True)
        :trino_ddl +=
        "SHOW COLUMNS FROM catalog.{tablename}";

    elseif (FUNCTION) then (True)
        :trino_ddl +=
        "SHOW FUNCTIONS";

    elseif (USE) then (True)
        :trino_ddl +=
        "USE {db}";

    elseif (EXPLAIN) then (True)
        :trino_ddl +=
        "EXPLAIN {query}";

    else (False)
        :Error出力;
        end

    endif

    :write output file(.sql);


end
@enduml